/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ProfessionalAvailabiltyExceptions as PrismaProfessionalAvailabiltyExceptions,
} from "@prisma/client";

export class ProfessionalAvailabiltyExceptionsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProfessionalAvailabiltyExceptionsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.professionalAvailabiltyExceptions.count(args);
  }

  async professionalAvailabiltyExceptionsItems(
    args: Prisma.ProfessionalAvailabiltyExceptionsFindManyArgs
  ): Promise<PrismaProfessionalAvailabiltyExceptions[]> {
    return this.prisma.professionalAvailabiltyExceptions.findMany(args);
  }
  async professionalAvailabiltyExceptions(
    args: Prisma.ProfessionalAvailabiltyExceptionsFindUniqueArgs
  ): Promise<PrismaProfessionalAvailabiltyExceptions | null> {
    return this.prisma.professionalAvailabiltyExceptions.findUnique(args);
  }
  async createProfessionalAvailabiltyExceptions(
    args: Prisma.ProfessionalAvailabiltyExceptionsCreateArgs
  ): Promise<PrismaProfessionalAvailabiltyExceptions> {
    return this.prisma.professionalAvailabiltyExceptions.create(args);
  }
  async updateProfessionalAvailabiltyExceptions(
    args: Prisma.ProfessionalAvailabiltyExceptionsUpdateArgs
  ): Promise<PrismaProfessionalAvailabiltyExceptions> {
    return this.prisma.professionalAvailabiltyExceptions.update(args);
  }
  async deleteProfessionalAvailabiltyExceptions(
    args: Prisma.ProfessionalAvailabiltyExceptionsDeleteArgs
  ): Promise<PrismaProfessionalAvailabiltyExceptions> {
    return this.prisma.professionalAvailabiltyExceptions.delete(args);
  }
}
