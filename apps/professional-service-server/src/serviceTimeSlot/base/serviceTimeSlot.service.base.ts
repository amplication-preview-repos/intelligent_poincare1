/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ServiceTimeSlot as PrismaServiceTimeSlot,
} from "@prisma/client";

export class ServiceTimeSlotServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ServiceTimeSlotCountArgs, "select">
  ): Promise<number> {
    return this.prisma.serviceTimeSlot.count(args);
  }

  async serviceTimeSlots(
    args: Prisma.ServiceTimeSlotFindManyArgs
  ): Promise<PrismaServiceTimeSlot[]> {
    return this.prisma.serviceTimeSlot.findMany(args);
  }
  async serviceTimeSlot(
    args: Prisma.ServiceTimeSlotFindUniqueArgs
  ): Promise<PrismaServiceTimeSlot | null> {
    return this.prisma.serviceTimeSlot.findUnique(args);
  }
  async createServiceTimeSlot(
    args: Prisma.ServiceTimeSlotCreateArgs
  ): Promise<PrismaServiceTimeSlot> {
    return this.prisma.serviceTimeSlot.create(args);
  }
  async updateServiceTimeSlot(
    args: Prisma.ServiceTimeSlotUpdateArgs
  ): Promise<PrismaServiceTimeSlot> {
    return this.prisma.serviceTimeSlot.update(args);
  }
  async deleteServiceTimeSlot(
    args: Prisma.ServiceTimeSlotDeleteArgs
  ): Promise<PrismaServiceTimeSlot> {
    return this.prisma.serviceTimeSlot.delete(args);
  }
}
