/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PaymentHistory as PrismaPaymentHistory } from "@prisma/client";

export class PaymentHistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentHistoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentHistory.count(args);
  }

  async paymentHistories(
    args: Prisma.PaymentHistoryFindManyArgs
  ): Promise<PrismaPaymentHistory[]> {
    return this.prisma.paymentHistory.findMany(args);
  }
  async paymentHistory(
    args: Prisma.PaymentHistoryFindUniqueArgs
  ): Promise<PrismaPaymentHistory | null> {
    return this.prisma.paymentHistory.findUnique(args);
  }
  async createPaymentHistory(
    args: Prisma.PaymentHistoryCreateArgs
  ): Promise<PrismaPaymentHistory> {
    return this.prisma.paymentHistory.create(args);
  }
  async updatePaymentHistory(
    args: Prisma.PaymentHistoryUpdateArgs
  ): Promise<PrismaPaymentHistory> {
    return this.prisma.paymentHistory.update(args);
  }
  async deletePaymentHistory(
    args: Prisma.PaymentHistoryDeleteArgs
  ): Promise<PrismaPaymentHistory> {
    return this.prisma.paymentHistory.delete(args);
  }
}
